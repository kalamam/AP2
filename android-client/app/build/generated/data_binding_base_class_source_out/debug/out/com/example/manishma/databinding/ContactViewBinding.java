// Generated by view binder compiler. Do not edit!
package com.example.manishma.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.manishma.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContactViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView contactViewContactName;

  @NonNull
  public final TextView contactViewLastMessage;

  @NonNull
  public final TextView contactViewLastMessageTime;

  @NonNull
  public final ImageView contactViewProfilePicture;

  private ContactViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView contactViewContactName, @NonNull TextView contactViewLastMessage,
      @NonNull TextView contactViewLastMessageTime, @NonNull ImageView contactViewProfilePicture) {
    this.rootView = rootView;
    this.contactViewContactName = contactViewContactName;
    this.contactViewLastMessage = contactViewLastMessage;
    this.contactViewLastMessageTime = contactViewLastMessageTime;
    this.contactViewProfilePicture = contactViewProfilePicture;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContactViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContactViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.contact_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContactViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contactViewContactName;
      TextView contactViewContactName = ViewBindings.findChildViewById(rootView, id);
      if (contactViewContactName == null) {
        break missingId;
      }

      id = R.id.contactViewLastMessage;
      TextView contactViewLastMessage = ViewBindings.findChildViewById(rootView, id);
      if (contactViewLastMessage == null) {
        break missingId;
      }

      id = R.id.contactViewLastMessageTime;
      TextView contactViewLastMessageTime = ViewBindings.findChildViewById(rootView, id);
      if (contactViewLastMessageTime == null) {
        break missingId;
      }

      id = R.id.contactViewProfilePicture;
      ImageView contactViewProfilePicture = ViewBindings.findChildViewById(rootView, id);
      if (contactViewProfilePicture == null) {
        break missingId;
      }

      return new ContactViewBinding((ConstraintLayout) rootView, contactViewContactName,
          contactViewLastMessage, contactViewLastMessageTime, contactViewProfilePicture);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
